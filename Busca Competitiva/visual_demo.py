#!/usr/bin/env python3
"""
Demonstra√ß√£o da Interface Visual do Jogo de Damas

Este arquivo demonstra como usar a interface gr√°fica do jogo de damas.
Execute este arquivo para testar a interface visual.
"""

def main():
    """Fun√ß√£o principal para demonstrar a interface visual."""
    print("=" * 60)
    print("    DEMONSTRA√á√ÉO - INTERFACE VISUAL JOGO DE DAMAS")
    print("=" * 60)
    print()
    
    # Verificar se pygame est√° dispon√≠vel
    try:
        import pygame
        print("‚úÖ Pygame encontrado! Vers√£o:", pygame.version.ver)
    except ImportError:
        print("‚ùå ERRO: Pygame n√£o est√° instalado!")
        print()
        print("Para instalar pygame:")
        print("  pip install pygame")
        print("  ou")
        print("  pip install -r requirements.txt")
        print()
        input("Pressione Enter para sair...")
        return
    
    print("üéÆ Iniciando demonstra√ß√£o da interface visual...")
    print()
    print("TIPOS DE PARTIDA DISPON√çVEIS:")
    print("1. Humano vs IA (voc√™ controla as pe√ßas brancas)")
    print("2. IA vs IA (demonstra√ß√£o autom√°tica)")
    print()
    
    escolha = input("Escolha o tipo (1 ou 2, Enter para padr√£o=1): ").strip()
    if not escolha:
        escolha = "1"
    
    try:
        from visual import JogoVisual
        from exercicios.algoritmos_busca import JogadorHumano, JogadorAleatorio
        
        if escolha == "2":
            print("ü§ñ Demonstra√ß√£o IA vs IA iniciando...")
            print("   Observe os algoritmos jogando automaticamente!")
            estrategia_brancas = JogadorAleatorio()
            estrategia_pretas = JogadorAleatorio()
        else:
            print("üë§ Voc√™ jogar√° com as pe√ßas brancas contra a IA!")
            print("   Use o mouse para selecionar e mover as pe√ßas.")
            estrategia_brancas = JogadorHumano()
            estrategia_pretas = JogadorAleatorio()
        
        print()
        print("CONTROLES DA INTERFACE:")
        print("  üñ±Ô∏è  Clique nas pe√ßas para selecion√°-las")
        print("  üñ±Ô∏è  Clique no destino para mover")
        print("  ‚å®Ô∏è  R = Reiniciar jogo")
        print("  ‚å®Ô∏è  H = Mostrar ajuda")
        print("  ‚å®Ô∏è  ESC = Sair")
        print()
        print("Preparando interface...")
        
        # Criar e executar jogo visual
        jogo_visual = JogoVisual(largura=800, altura=950)
        vencedor = jogo_visual.executar_partida(estrategia_brancas, estrategia_pretas)
        
        # Mostrar resultado
        print()
        if vencedor:
            print(f"üèÜ Resultado: {vencedor.value.title()} venceu!")
            if vencedor.value == "branca" and escolha == "1":
                print("üéâ Parab√©ns! Voc√™ venceu!")
            elif vencedor.value == "preta" and escolha == "1":
                print("üòÖ A IA venceu! Tente novamente.")
        else:
            print("‚èπÔ∏è  Jogo encerrado pelo usu√°rio.")
        
        jogo_visual.fechar()
        
    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {e}")
        print("   Verifique se todos os m√≥dulos est√£o dispon√≠veis.")
    except Exception as e:
        print(f"‚ùå Erro durante execu√ß√£o: {e}")
        print("   Verifique se pygame est√° funcionando corretamente.")
    
    print()
    input("Pressione Enter para finalizar...")


if __name__ == "__main__":
    main() 